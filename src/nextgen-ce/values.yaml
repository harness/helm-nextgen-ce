# Default values for nextgen-ce
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "https://test"
replicaCount: 2
maxSurge: 100%
maxUnavailable: 0

java:
  memory: 2500
  memoryLimit: 600
image:
  registry: docker.io
  repository: harness/nextgen-ce-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "77300-000"
  digest: ""

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

securityImage:
  image:
    registry: docker.io
    repository: harness/sto-plugin
    pullPolicy: IfNotPresent
    tag: latest
    digest: ""

s3UploadImage:
  image:
    registry: docker.io
    repository: bewithaman/s3
    pullPolicy: IfNotPresent
    tag: latest
    digest: ""

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword

nameOverride: ""
fullnameOverride: ""

ngServiceAccount: "test"
redislabsCATruststore: "test"

defaultInternalImageConnector: "test"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

probes:
  livenessProbe:
    httpGet:
      path: /ccm/api/health
      port: 6340
    initialDelaySeconds: 180
    failureThreshold: 10
    periodSeconds: 15
  readinessProbe:
    httpGet:
      path: /ccm/api/health
      port: 6340
    initialDelaySeconds: 180
    failureThreshold: 10
    periodSeconds: 15

service:
  type: ClusterIP
  port: 6340

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 1
    memory: 3Gi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

stoServiceGlobalToken:
  name: harness-secrets
  key: stoAppHarnessToken

nodeSelector: {}

tolerations: []

affinity: {}

# Commented out at request of Will as not needed.
# env:
#   secrets:
#   config:
#     APP_ENABLE_UI: "true"
#     APP_TOKEN_JWT_SECRET: test
#     APP_INTERNAL_TOKEN_JWT_SECRET: test
#     STO_SERVICE_GLOBAL_TOKEN: "token"
